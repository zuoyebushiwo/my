设计原则：
1.找出应用中可能需要变化之处，把它们独立出来，不要和那些不需要变化的代码混在一起。
2.针对接口编程，而不是针对实现编程。
3.为了交互对象之间的松耦合设计而努力。
3.多用组合，少用继承。
4.开放关闭原则：类应该对扩展开放，对修改关闭。

一、策略模式：
	
	在对象运行期间，加入特性。比如鸭子

二、观察者模式：

	在对象之间定义了一对多的依赖。这样一来，当一个对象改变状态，
	依赖它的对象会接到通知，并自动更新。

三、装饰者模式：

	动态将责任附加到对象上。
	若要扩展功能，装饰者提供了比继承更有弹性的替代方案。